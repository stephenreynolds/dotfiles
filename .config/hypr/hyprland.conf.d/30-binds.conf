# See https://wiki.hyprland.org/Configuring/Binds/

$mod = SUPER # Sets "Windows" key as main modifier

$scripts = $HOME/.config/hypr/scripts

bind = $mod, C, exec, $scripts/kill_active.sh

bind = $mod, V, fullscreen, 1
bind = $mod SHIFT, V, fullscreen, 0
bind = $mod, F, togglefloating
bind = $mod SHIFT, F, pin
bind = $mod ALT, F, workspaceopt, allfloat

# Layout
bind = $mod SHIFT, U, exec, $scripts/toggle_layout.sh

# Dwindle layout
bind = $mod, S, togglesplit
bind = $mod, U, pseudo

# Master layout
bind = $mod, S, layoutmsg, rollnext
bind = $mod SHIFT, S, layoutmsg, rollprev
bind = $mod, U, layoutmsg, orientationcycle center right

# Focus last window
bind = $mod, Y, focuscurrentorlast

# Move focus with mod + arrow keys
bind = $mod, H, movefocus, l
bind = $mod, L, movefocus, r
bind = $mod, K, movefocus, u
bind = $mod, J, movefocus, d
#
# Move focus with mod + Shift + arrow keys
bind = $mod SHIFT, H, movewindow, l
bind = $mod SHIFT, L, movewindow, r
bind = $mod SHIFT, K, movewindow, u
bind = $mod SHIFT, J, movewindow, d

# Group window
bind = $mod, G, togglegroup
bind = $mod CTRL, G, moveoutofgroup
bind = $mod ALT, G, lockactivegroup, toggle
bind = $mod ALT, H, moveintogroup, l
bind = $mod ALT, L, moveintogroup, r
bind = $mod ALT, K, moveintogroup, u
bind = $mod ALT, J, moveintogroup, d

# Switch to next window in group
bind = $mod, Comma, changegroupactive, b
bind = $mod, Period, changegroupactive, f
bind = $mod SHIFT, Comma, movegroupwindow, b
bind = $mod SHIFT, Period, movegroupwindow, f

# Next/previous workspace on monitor
bind = $mod, N, workspace, m-1
bind = $mod, E, workspace, m+1
bind = $mod SHIFT, N, movetoworkspace, m-1
bind = $mod SHIFT, E, movetoworkspace, m+1

# Next empty workspace on monitor
bind = $mod, O, exec, $scripts/focus_empty.sh
bind = $mod SHIFT, O, exec, $scripts/move_to_empty.sh

# Example special workspace (scratchpad)
bind = $mod, Return, togglespecialworkspace
bind = $mod SHIFT, Return, movetoworkspace, special

# Scroll through existing workspaces with mod + scroll
bind = $mod, mouse_down, workspace, e+1
bind = $mod, mouse_up, workspace, e-1

# Move/resize windows with mod + LMB/RMB and dragging
bindm = $mod, mouse:272, movewindow
bindm = $mod, mouse:273, resizewindow

binde = $mod CTRL, H, resizeactive, -10 0
binde = $mod CTRL, L, resizeactive, 10 0
binde = $mod CTRL, K, resizeactive, 0 -10
binde = $mod CTRL, J, resizeactive, 0 10

bind = $mod SHIFT, Q, exec, hyprctl reload
bind = $mod CTRL, Q, exec, wlogout -p layer-shell # TODO: replace with astal widget

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioForward, exec, playerctl position +10
bindl = , XF86AudioRewind, exec, playerctl position -10
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioStop, exec, playerctl stop

# Toggle animations
bind = $mod SHIFT, A, exec, $scripts/toggle_animations.sh
bind = $mod SHIFT, G, exec, $scripts/toggle_gaps.sh

# Clipboard history
bind = $mod CTRL, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

# Color picker
bind = $mod SHIFT, C, exec, hyprpicker --format=hex --autocopy

# Capture the active output
bind = , Print, exec, grimblast save output - | swappy -f -
# Capture all visible windows
bind = ALT, Print, exec, grimblast save screen - | swappy -f -
# Capture the active window
bind = CTRL, Print, exec, grimblast save active - | swappy -f -
# Capture an area selection
bind = SHIFT, Print, exec, grimblast save area - | swappy -f -
# Copy screenshot text using OCR
bind = SUPER, Print, exec, grimblast --freeze save area - | tesseract - - | wl-copy && notify-send -t 3000 'OCR result copied to clipboard'

# Launch applications
$browser = zen-browser
$fileBrowser = dolphin
$terminal = ghostty
$menu = wofi --show drun

bind = $mod, Space, exec, $menu
bind = $mod, T, exec, $terminal
bind = $mod, W, exec, $browser
bind = $mod SHIFT, W, exec, $scripts/private_browser.sh

# Run submap
bind = $mod, R, submap, run_submap
submap = run_submap
bind = , D, exec, vesktop
bind = , D, submap, reset
bind = , F, exec, $fileBrowser
bind = , F, submap, reset
bind = , M, exec, flatpak run com.github.vladimiry.ElectronMail
bind = , M, submap, reset
bind = , O, exec, obsidian
bind = , O, submap, reset
bind = , P, exec, pavucontrol
bind = , P, submap, reset
bind = , S, exec, gtk-launch steam.desktop
bind = , S, submap, reset
bind = , Escape, submap, reset
submap = reset

# Passthrough submap
bind = $mod, Pause, submap, passthrough_submap
submap = passthrough_supmap
bind = $mod, Pause, submap, reset
submap = reset
